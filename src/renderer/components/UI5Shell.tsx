import React, { useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º React.createElement –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ç–∏–ø–∞–º–∏
const UI5Shell: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const navigate = useNavigate();
  const location = useLocation();

  // –ë—ã—Å—Ç—Ä—ã–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
  useEffect(() => {
    const handleKeyPress = (e: KeyboardEvent) => {
      if (e.ctrlKey) {
        switch (e.key) {
          case '1':
            e.preventDefault();
            navigate('/all-items');
            break;
          case '2':
            e.preventDefault();
            navigate('/receiving');
            break;
          case '3':
            e.preventDefault();
            navigate('/archive');
            break;
          case '4':
            e.preventDefault();
            navigate('/');
            break;
          case '5':
            e.preventDefault();
            navigate('/locations');
            break;
          case '6':
            e.preventDefault();
            navigate('/reports');
            break;
          case '7':
            e.preventDefault();
            navigate('/settings');
            break;
        }
      }
    };

    window.addEventListener('keydown', handleKeyPress);
    return () => window.removeEventListener('keydown', handleKeyPress);
  }, [navigate]);
  return React.createElement('div', 
    { className: 'warehouse-app' },
    
    // ShellBar
    React.createElement('div', {
      style: {
        height: '44px',
        backgroundColor: 'var(--warehouse-secondary)',
        color: 'white',
        display: 'flex',
        alignItems: 'center',
        padding: '0 1rem',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
      }
    },
      React.createElement('h2', {
        style: { 
          margin: 0, 
          fontSize: '1.25rem',
          fontFamily: 'var(--sapFontFamily)'
        }
      }, 'üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º'),
      
      React.createElement('div', {
        style: { marginLeft: 'auto', display: 'flex', gap: '1rem' }
      },
        React.createElement('span', {
          style: { fontSize: '0.875rem', opacity: 0.8 }
        }, 'Warehouse Management System'),
        
        React.createElement('button', {
          style: {
            backgroundColor: 'transparent',
            border: '1px solid rgba(255,255,255,0.3)',
            color: 'white',
            padding: '0.5rem 1rem',
            borderRadius: '0.25rem',
            cursor: 'pointer',
            fontSize: '0.875rem',
            fontFamily: 'var(--sapFontFamily)'
          },
          onClick: () => console.log('Profile clicked')
        }, 'üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
      )
    ),
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    React.createElement('div', {
      style: { 
        display: 'flex', 
        height: 'calc(100vh - 76px)' // 44px ShellBar + 32px StatusBar
      }
    },
      // –ë–æ–∫–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–∫–æ–Ω—Ç–æ–≤–∫–æ–π
      React.createElement('div', {
        style: {
          width: '250px',
          backgroundColor: 'white',
          borderRight: '2px solid var(--sapNeutralBorderColor)',
          padding: '1rem 0',
          boxShadow: '2px 0 8px rgba(0,0,0,0.1)'
        }
      },
        React.createElement('nav', {},
          React.createElement('ul', {
            style: {
              listStyle: 'none',
              margin: 0,
              padding: 0
            }
          },
            [
              { name: 'üì¶ –í—Å–µ –ø–æ–∑–∏—Ü–∏–∏', path: '/all-items', icon: 'üì¶', hotkey: 'Ctrl+1' },
              { name: 'üì• –ü—Ä–∏–µ–º–∫–∞', path: '/receiving', icon: 'üì•', hotkey: 'Ctrl+2' },
              { name: 'üóÇÔ∏è –ê—Ä—Ö–∏–≤', path: '/archive', icon: 'üóÇÔ∏è', hotkey: 'Ctrl+3' },
              { name: 'üìä –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', path: '/', icon: 'üìä', hotkey: 'Ctrl+4' },
              { name: 'üìç –õ–æ–∫–∞—Ü–∏–∏', path: '/locations', icon: 'üìç', hotkey: 'Ctrl+5' },
              { name: 'üìà –û—Ç—á–µ—Ç—ã', path: '/reports', icon: 'üìà', hotkey: 'Ctrl+6' },
              { name: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', path: '/settings', icon: '‚öôÔ∏è', hotkey: 'Ctrl+7' }
            ].map((item, index) => 
              React.createElement('li', { key: index },
                React.createElement('button', {
                  type: 'button',
                  style: {
                    display: 'flex',
                    alignItems: 'center',
                    gap: '0.75rem',
                    padding: '0.75rem 1rem',
                    color: location.pathname === item.path ? 'var(--warehouse-primary)' : 'var(--sapTextColor)',
                    background: 'none',
                    fontFamily: 'var(--sapFontFamily)',
                    fontSize: 'var(--sapFontSize)',
                    borderRadius: '0.5rem',
                    margin: '0 0.5rem 0.25rem 0.5rem',
                    transition: 'all 0.2s ease',
                    cursor: 'pointer',
                    backgroundColor: location.pathname === item.path ? 'var(--warehouse-primary)15' : 'transparent',
                    fontWeight: location.pathname === item.path ? 'bold' : 'normal',
                    border: location.pathname === item.path ? '1px solid var(--warehouse-primary)40' : '1px solid transparent',
                    boxShadow: location.pathname === item.path ? 'inset 0 2px 4px rgba(0,0,0,0.1)' : 'none'
                  },
                  onMouseEnter: (e) => {
                    e.currentTarget.style.backgroundColor = 'var(--warehouse-primary)20';
                    e.currentTarget.style.transform = 'translateX(4px)';
                    e.currentTarget.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';
                    e.currentTarget.style.border = '1px solid var(--warehouse-primary)60';
                  },
                  onMouseLeave: (e) => {
                    const isActive = location.pathname === item.path;
                    e.currentTarget.style.backgroundColor = isActive ? 'var(--warehouse-primary)15' : 'transparent';
                    e.currentTarget.style.transform = 'translateX(0)';
                    e.currentTarget.style.boxShadow = isActive ? 'inset 0 2px 4px rgba(0,0,0,0.1)' : 'none';
                    e.currentTarget.style.border = isActive ? '1px solid var(--warehouse-primary)40' : '1px solid transparent';
                  },
                  onClick: (e) => {
                    e.preventDefault();
                    // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫
                    navigate(item.path, { replace: false });
                    // –£–±—Ä–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                  }
                }, 
                  React.createElement('span', {
                    style: { fontSize: '1.2rem' }
                  }, item.icon),
                  React.createElement('div', {
                    style: { flex: 1, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }
                  },
                    React.createElement('span', {}, item.name.replace(/^[üì¶üì•üóÇÔ∏èüìäüìçüìà‚öôÔ∏è]\s/, '')),
                    item.hotkey && React.createElement('span', {
                      style: {
                        fontSize: 'var(--sapFontSmallSize)',
                        color: 'var(--sapNeutralColor)',
                        backgroundColor: 'var(--sapNeutralBackground)',
                        padding: '0.125rem 0.375rem',
                        borderRadius: '0.25rem',
                        fontFamily: 'monospace'
                      }
                    }, item.hotkey)
                  )
                )
              )
            )
          )
        )
      ),
      
      // –ö–æ–Ω—Ç–µ–Ω—Ç —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–∫–æ–Ω—Ç–æ–≤–∫–æ–π
      React.createElement('div', {
        style: {
          flex: 1,
          overflow: 'auto',
          padding: '1.5rem',
          backgroundColor: 'var(--sapBackgroundColor)',
          border: '1px solid var(--sapNeutralBorderColor)20',
          borderLeft: 'none',
          borderRadius: '0 0.5rem 0 0'
        }
      }, children)
    ),
    
    // –°—Ç–∞—Ç—É—Å –±–∞—Ä
    React.createElement('div', {
      style: {
        height: '32px',
        backgroundColor: 'var(--sapNeutralBackground)',
        borderTop: '1px solid var(--sapNeutralBorderColor)',
        display: 'flex',
        alignItems: 'center',
        padding: '0 1rem',
        fontSize: 'var(--sapFontSmallSize)',
        color: 'var(--sapNeutralColor)',
        fontFamily: 'var(--sapFontFamily)'
      }
    },
      React.createElement('span', {}, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'),
      React.createElement('span', {
        style: { marginLeft: 'auto' }
      }, '–°—Ç–∞—Ç—É—Å: ', 
        React.createElement('span', {
          className: 'warehouse-success'
        }, 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ')
      )
    )
  );
};

export default UI5Shell; 

