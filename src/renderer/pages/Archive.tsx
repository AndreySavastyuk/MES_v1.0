import React, { useState, useEffect } from 'react';

interface ArchiveData {
  id: string;
  name: string;
  category: string;
  quantity: number;
  location: string;
  reason: '–°–ø–∏—Å–∞–Ω–æ' | '–ü—Ä–æ–¥–∞–Ω–æ' | '–í–æ–∑–≤—Ä–∞—Ç' | '–ü–µ—Ä–µ–º–µ—â–µ–Ω–æ';
  date: string;
  operator: string;
  notes?: string;
}

const Archive: React.FC = () => {
  const [archiveItems, setArchiveItems] = useState<ArchiveData[]>([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterReason, setFilterReason] = useState('–í—Å–µ');

  useEffect(() => {
    loadArchiveItems();
  }, []);

  const loadArchiveItems = async () => {
    try {
      const mockItems: ArchiveData[] = [
        { id: 'A001', name: '–ü—Ä–∏–Ω—Ç–µ—Ä HP LaserJet 1020', category: '–û—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∞', quantity: 1, location: '–°–∫–ª–∞–¥ A-1', reason: '–°–ø–∏—Å–∞–Ω–æ', date: '2024-01-10', operator: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.', notes: '–ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –ø–µ—á–∞—Ç–∞—é—â–µ–π –≥–æ–ª–æ–≤–∫–∏' },
        { id: 'A002', name: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Microsoft', category: '–ü–µ—Ä–∏—Ñ–µ—Ä–∏—è', quantity: 3, location: '–°–∫–ª–∞–¥ B-2', reason: '–ü—Ä–æ–¥–∞–Ω–æ', date: '2024-01-12', operator: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.' }
      ];
      setArchiveItems(mockItems);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä—Ö–∏–≤–∞:', error);
    }
  };

  const filteredItems = archiveItems.filter(item => 
    item.name.toLowerCase().includes(searchTerm.toLowerCase()) &&
    (filterReason === '–í—Å–µ' || item.reason === filterReason)
  );

  const reasons = ['–í—Å–µ', ...Array.from(new Set(archiveItems.map(item => item.reason)))];

  return React.createElement('div', 
    { style: { padding: '0', fontFamily: 'var(--sapFontFamily)' } },
    
    React.createElement('div', 
      { 
        style: { 
          marginBottom: '2rem',
          padding: '1.5rem',
          background: 'linear-gradient(135deg, var(--warehouse-primary)15, var(--warehouse-secondary)10)',
          borderRadius: 'var(--sapElement_BorderCornerRadius)',
          border: '1px solid var(--warehouse-primary)30'
        } 
      },
      React.createElement('h1', {
        style: {
          fontSize: 'var(--sapFontHeader1Size)',
          margin: '0 0 0.5rem 0',
          color: 'var(--warehouse-primary)',
          fontFamily: 'var(--sapFontFamily)',
          fontWeight: 'bold',
          display: 'flex',
          alignItems: 'center',
          gap: '0.75rem'
        }
      }, 
        React.createElement('span', { style: { fontSize: '2rem' } }, 'üóÇÔ∏è'),
        '–ê—Ä—Ö–∏–≤ –æ–ø–µ—Ä–∞—Ü–∏–π'
      ),
      
      React.createElement('p', {
        style: {
          fontSize: 'var(--sapFontSize)',
          color: 'var(--sapNeutralColor)',
          margin: '0',
          fontFamily: 'var(--sapFontFamily)'
        }
      }, '–ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –¥–≤–∏–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤')
    )
  );
};

export default Archive; 