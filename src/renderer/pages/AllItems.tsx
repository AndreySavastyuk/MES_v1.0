import React, { useState, useEffect } from 'react';

interface ItemData {
  id: string;
  name: string;
  category: string;
  quantity: number;
  location: string;
  status: '–í –Ω–∞–ª–∏—á–∏–∏' | '–ú–∞–ª–æ' | '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏';
  lastUpdate: string;
}

const AllItems: React.FC = () => {
  const [items, setItems] = useState<ItemData[]>([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('–í—Å–µ');

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    loadItems();
  }, []);

  const loadItems = async () => {
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ API
      const mockItems: ItemData[] = [
        { id: '001', name: '–ü—Ä–∏–Ω—Ç–µ—Ä HP LaserJet', category: '–û—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∞', quantity: 15, location: '–°–∫–ª–∞–¥ A-1', status: '–í –Ω–∞–ª–∏—á–∏–∏', lastUpdate: '2024-01-15' },
        { id: '002', name: '–ë—É–º–∞–≥–∞ A4', category: '–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏', quantity: 5, location: '–°–∫–ª–∞–¥ B-2', status: '–ú–∞–ª–æ', lastUpdate: '2024-01-14' },
        { id: '003', name: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è', category: '–ü–µ—Ä–∏—Ñ–µ—Ä–∏—è', quantity: 25, location: '–°–∫–ª–∞–¥ A-3', status: '–í –Ω–∞–ª–∏—á–∏–∏', lastUpdate: '2024-01-16' },
        { id: '004', name: '–ú–æ–Ω–∏—Ç–æ—Ä 24"', category: '–ú–æ–Ω–∏—Ç–æ—Ä—ã', quantity: 0, location: '–°–∫–ª–∞–¥ C-1', status: '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏', lastUpdate: '2024-01-10' }
      ];
      setItems(mockItems);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    }
  };

  const filteredItems = items.filter(item => 
    item.name.toLowerCase().includes(searchTerm.toLowerCase()) &&
    (filterCategory === '–í—Å–µ' || item.category === filterCategory)
  );

  const categories = ['–í—Å–µ', ...Array.from(new Set(items.map(item => item.category)))];

  return React.createElement('div', 
    { style: { padding: '0', fontFamily: 'var(--sapFontFamily)' } },
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–∫–æ–Ω—Ç–æ–≤–∫–æ–π
    React.createElement('div', 
      { 
        style: { 
          marginBottom: '2rem',
          padding: '1.5rem',
          background: 'linear-gradient(135deg, var(--warehouse-primary)15, var(--warehouse-secondary)10)',
          borderRadius: 'var(--sapElement_BorderCornerRadius)',
          border: '2px solid var(--warehouse-primary)40',
          boxShadow: 'var(--sapContent_Shadow2)'
        } 
      },
      React.createElement('h1', {
        style: {
          fontSize: 'var(--sapFontHeader1Size)',
          margin: '0 0 0.5rem 0',
          color: 'var(--warehouse-primary)',
          fontFamily: 'var(--sapFontFamily)',
          fontWeight: 'bold',
          display: 'flex',
          alignItems: 'center',
          gap: '0.75rem'
        }
      }, 
        React.createElement('span', { style: { fontSize: '2rem' } }, 'üì¶'),
        '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏'
      ),
      
      React.createElement('p', {
        style: {
          fontSize: 'var(--sapFontSize)',
          color: 'var(--sapNeutralColor)',
          margin: '0',
          fontFamily: 'var(--sapFontFamily)'
        }
      }, '–ü–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π –Ω–∞ —Å–∫–ª–∞–¥–µ')
    ),

    // –ü–∞–Ω–µ–ª—å –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å –æ–∫–æ–Ω—Ç–æ–≤–∫–æ–π
    React.createElement('div', {
      style: {
        display: 'flex',
        gap: '1rem',
        marginBottom: '1.5rem',
        flexWrap: 'wrap',
        alignItems: 'center',
        padding: '1rem',
        background: 'var(--sapGroupContentBackground)',
        borderRadius: 'var(--sapElement_BorderCornerRadius)',
        border: '1px solid var(--sapNeutralBorderColor)',
        boxShadow: 'var(--sapContent_Shadow1)'
      }
    },
      // –ü–æ–∏—Å–∫
      React.createElement('div', {
        style: { flex: '1', minWidth: '250px' }
      },
        React.createElement('input', {
          type: 'text',
          placeholder: 'üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...',
          value: searchTerm,
          onChange: (e) => setSearchTerm(e.target.value),
          style: {
            width: '100%',
            padding: '0.75rem 1rem',
            border: '2px solid var(--warehouse-primary)30',
            borderRadius: 'var(--sapField_BorderCornerRadius)',
            fontSize: 'var(--sapFontSize)',
            fontFamily: 'var(--sapFontFamily)',
            transition: 'border-color 0.2s ease',
            outline: 'none',
            boxShadow: 'inset 0 2px 4px rgba(0,0,0,0.1)'
          }
        })
      ),
      
      // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
      React.createElement('select', {
        value: filterCategory,
        onChange: (e) => setFilterCategory(e.target.value),
        style: {
          padding: '0.75rem 1rem',
          border: '2px solid var(--warehouse-primary)30',
          borderRadius: 'var(--sapField_BorderCornerRadius)',
          fontSize: 'var(--sapFontSize)',
          fontFamily: 'var(--sapFontFamily)',
          backgroundColor: 'white',
          minWidth: '150px'
        }
      },
        categories.map(category => 
          React.createElement('option', { key: category, value: category }, category)
        )
      ),
      
              // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        React.createElement('button', {
          style: {
            padding: '0.75rem 1.5rem',
            background: 'var(--warehouse-primary)',
            color: 'white',
            border: '2px solid var(--warehouse-primary)',
            borderRadius: 'var(--sapButton_BorderCornerRadius)',
            fontSize: 'var(--sapFontSize)',
            fontFamily: 'var(--sapFontFamily)',
            cursor: 'pointer',
            transition: 'all 0.2s ease',
            display: 'flex',
            alignItems: 'center',
            gap: '0.5rem',
            boxShadow: 'var(--sapContent_Shadow1)'
          },
        onClick: () => console.log('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä')
      }, 
        React.createElement('span', {}, '‚ûï'),
        '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'
      )
    ),

    // –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–∫–æ–Ω—Ç–æ–≤–∫–æ–π
    React.createElement('div', {
      style: {
        background: 'var(--sapGroupContentBackground)',
        borderRadius: 'var(--sapElement_BorderCornerRadius)',
        border: '2px solid var(--sapNeutralBorderColor)',
        overflow: 'hidden',
        boxShadow: 'var(--sapContent_Shadow2)'
      }
    },
      React.createElement('table', {
        style: {
          width: '100%',
          borderCollapse: 'collapse',
          fontFamily: 'var(--sapFontFamily)'
        }
      },
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        React.createElement('thead', {},
          React.createElement('tr', {
            style: {
              backgroundColor: 'var(--warehouse-primary)10',
              borderBottom: '2px solid var(--warehouse-primary)20'
            }
          },
            ['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–õ–æ–∫–∞—Ü–∏—è', '–°—Ç–∞—Ç—É—Å', '–û–±–Ω–æ–≤–ª–µ–Ω–æ'].map(header => 
              React.createElement('th', {
                key: header,
                style: {
                  padding: '1rem',
                  textAlign: 'left',
                  fontWeight: 'bold',
                  color: 'var(--warehouse-primary)',
                  fontSize: 'var(--sapFontSize)',
                  fontFamily: 'var(--sapFontFamily)'
                }
              }, header)
            )
          )
        ),
        
        // –¢–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
        React.createElement('tbody', {},
          filteredItems.map((item, index) => 
            React.createElement('tr', {
              key: item.id,
              style: {
                borderBottom: '1px solid var(--sapNeutralBorderColor)',
                backgroundColor: index % 2 === 0 ? 'transparent' : 'var(--sapNeutralBackground)50',
                transition: 'background-color 0.2s ease'
              },
              onMouseEnter: (e) => {
                e.currentTarget.style.backgroundColor = 'var(--warehouse-primary)08';
              },
              onMouseLeave: (e) => {
                e.currentTarget.style.backgroundColor = index % 2 === 0 ? 'transparent' : 'var(--sapNeutralBackground)50';
              }
            },
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSize)', fontFamily: 'monospace' }
              }, item.id),
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSize)', fontWeight: '500' }
              }, item.name),
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSize)' }
              }, item.category),
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSize)', fontWeight: 'bold' }
              }, item.quantity.toString()),
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSize)' }
              }, item.location),
              React.createElement('td', {
                style: { padding: '1rem' }
              },
                React.createElement('span', {
                  style: {
                    padding: '0.25rem 0.75rem',
                    borderRadius: '1rem',
                    fontSize: 'var(--sapFontSmallSize)',
                    fontWeight: 'bold',
                    backgroundColor: 
                      item.status === '–í –Ω–∞–ª–∏—á–∏–∏' ? 'var(--warehouse-success)20' :
                      item.status === '–ú–∞–ª–æ' ? 'var(--warehouse-warning)20' : 'var(--warehouse-error)20',
                    color:
                      item.status === '–í –Ω–∞–ª–∏—á–∏–∏' ? 'var(--warehouse-success)' :
                      item.status === '–ú–∞–ª–æ' ? 'var(--warehouse-warning)' : 'var(--warehouse-error)'
                  }
                }, item.status)
              ),
              React.createElement('td', {
                style: { padding: '1rem', fontSize: 'var(--sapFontSmallSize)', color: 'var(--sapNeutralColor)' }
              }, new Date(item.lastUpdate).toLocaleDateString('ru-RU'))
            )
          )
        )
      )
    ),

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ
    React.createElement('div', {
      style: {
        marginTop: '1.5rem',
        padding: '1rem',
        background: 'var(--sapNeutralBackground)',
        borderRadius: 'var(--sapElement_BorderCornerRadius)',
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        fontSize: 'var(--sapFontSmallSize)',
        color: 'var(--sapNeutralColor)',
        fontFamily: 'var(--sapFontFamily)'
      }
    },
      React.createElement('span', {}, `–ü–æ–∫–∞–∑–∞–Ω–æ ${filteredItems.length} –∏–∑ ${items.length} —Ç–æ–≤–∞—Ä–æ–≤`),
      React.createElement('span', {}, `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString('ru-RU')}`)
    )
  );
};

export default AllItems; 